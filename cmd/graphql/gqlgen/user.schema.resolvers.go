package gqlgen

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"

	"github.com/lincolnjpg/investment_service/internal/dtos"
)

func (r *mutationResolver) CreateUser(ctx context.Context, input dtos.CreateUserInput) (*dtos.CreateUserOutput, error) {
	user, err := r.Resolver.UserService.Create(ctx, dtos.CreateUserInput{Name: input.Name, InvestorProfile: input.InvestorProfile})
	if err != nil {
		return &dtos.CreateUserOutput{}, err
	}

	return &user, nil
}

func (r *queryResolver) GetUserByID(ctx context.Context, input dtos.GetUserByIdInput) (*dtos.GetUserByIdOutput, error) {
	user, err := r.Resolver.UserService.GetById(context.Background(), input)
	if err != nil {
		return nil, err
	}

	return &user, nil
}

func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
